# vim: set ts=2 et:
# deployer bundle for development ('next') charms with HA
openstack-services:
  services:
    mysql:
      charm: mysql
      constraints: mem=1G
# NOTE [0]: Currently need to phase deploy clustered mysql due to races
#      num_units: 3
#      options:
#        vip: 10.5.100.1
#        vip_cidr: 24
    mysql-hacluster:
      charm: hacluster
    rabbitmq-server:
      charm: rabbitmq-server
      constraints: mem=1G
    keystone:
      charm: keystone
      constraints: mem=1G
# see NOTE [0]
#    ceph:
#      charm: ceph
#      num_units: 3
#      constraints: mem=1G
#      options:
#        monitor-count: 3
#        fsid: 6547bd3e-1397-11e2-82e5-53567c8d32dc
#        monitor-secret: AQCXrnZQwI7KGBAAiPofmKEXKxu5bUzoYLVkbQ==
#        osd-devices: /dev/vdb
#        osd-reformat: True
#        ephemeral-unmount: /mnt
    nova-compute:
      num_units: 2
      charm: nova-compute
      constraints: mem=4G
      options:
        enable-live-migration: True
        enable-resize: True
    nova-cloud-controller:
      charm: nova-cloud-controller
      constraints: mem=1G
      options:
        network-manager: Quantum
        quantum-security-groups: "yes"
    neutron-gateway:
      charm: neutron-gateway
      constraints: mem=1G
      options:
        instance-mtu: 1300
    cinder:
      charm: cinder
      constraints: mem=1G
      options:
        block-device: "None"
        glance-api-version: 2
    glance:
      charm: glance
      constraints: mem=1G
  relations:
# See NOTE [0]
#    - [ mysql, ceph ]
#    - [ mysql, mysql-hacluster ]
    - [ keystone, mysql ]
    - [ nova-cloud-controller, mysql ]
    - [ nova-cloud-controller, rabbitmq-server ]
    - [ nova-cloud-controller, glance ]
    - [ nova-cloud-controller, keystone ]
    - [ nova-compute, nova-cloud-controller ]
    - [ nova-compute, mysql ]
    - - nova-compute
      - rabbitmq-server:amqp
    - [ nova-compute, glance ]
    - [ glance, mysql ]
    - [ glance, keystone ]
    - [ glance, cinder ]
    - [ cinder, mysql ]
    - [ cinder, rabbitmq-server ]
    - [ cinder, nova-cloud-controller ]
    - [ cinder, keystone ]
    - [ neutron-gateway, mysql ]
    - [ neutron-gateway, nova-cloud-controller ]

openstack-singlerabbit:
  inherits: openstack-services
  relations:
    - [ "neutron-gateway:amqp", rabbitmq-server ]
openstack-icehouse:
  inherits: openstack-singlerabbit
  services:
    neutron-api:
      num_units: 2
      charm: neutron-api
      constraints: mem=1G
      options:
        neutron-security-groups: True
    neutron-openvswitch:
      charm: neutron-openvswitch
  relations:
  - [ neutron-api, mysql ]
  - [ neutron-api, rabbitmq-server ]
  - [ neutron-api, nova-cloud-controller ]
  - [ neutron-api, neutron-openvswitch ]
  - [ neutron-api, keystone ]
  - [ neutron-openvswitch, nova-compute ]
  - [ neutron-openvswitch, rabbitmq-server ]
openstack-icehouse-msg-split:
  inherits: openstack-services
  services:
    neutron-api:
      num_units: 2
      charm: neutron-api
      constraints: mem=1G
      options:
        neutron-security-groups: True
    neutron-openvswitch:
      charm: neutron-openvswitch
    rabbitmq-server-neutron:
      num_units: 2
      charm: rabbitmq-server
      constraints: mem=1G
  relations:
  - [ neutron-api, mysql ]
  - [ neutron-api, rabbitmq-server-neutron ]
  - [ neutron-api, nova-cloud-controller ]
  - [ neutron-api, neutron-openvswitch ]
  - [ neutron-api, keystone ]
  - [ neutron-api, neutron-gateway ]
  - [ neutron-openvswitch, nova-compute ]
  - [ neutron-openvswitch, rabbitmq-server-neutron ]
  - [ "neutron-gateway:amqp-nova", rabbitmq-server ]
  - [ "neutron-gateway:amqp", rabbitmq-server-neutron ]
 
# icehouse
trusty-icehouse:
  inherits: openstack-icehouse
  series: trusty
trusty-icehouse-msg-split:
  inherits: openstack-icehouse-msg-split
  series: trusty
trusty-icehouse-proposed:
  inherits: trusty-icehouse
  overrides:
    source: proposed
    openstack-origin: distro-proposed
trusty-icehouse-trunk:
  inherits: trusty-icehouse
  overrides:
    openstack-origin: ppa:openstack-ubuntu-testing/icehouse
    source: ppa:openstack-ubuntu-testing/icehouse
    offline-compression: "no"
